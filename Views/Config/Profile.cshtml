<section class="container-root">
    <div class="container">
        <div class="row">
            <div class="col-2">
                    <button type="button" class="btn btn-primary" data-toggle="modal"   data-target="#New-Profiles">Agregar Perfil
                    </button>
            </div>
        </div>
        <hr/>
        <div class="row justify-content-md-center card">
            <div class="col-md-auto">
                @{
                    List<Profile> LtsProfiles = ViewBag.LtsProfiles;
                    if (LtsProfiles.Count > 0)
                    {
                        <table class="table table-sm">
                            <thead class="table-light">
                                <tr class="table-primary">
                                    <th scope="col">#</th>
                                    <th scope="col">Nombre del Perfil</th>
                                    <th scope="col">Estado del Perfil</th>
                                    <th scope="col">Editar</th>
                                    <th scope="col">Eliminar</th>
                                </tr>
                            </thead>
                            @{
                                foreach (Profile pr in LtsProfiles)
                                {
                                    <tr class="table-light">
                                        <th>@pr.ProfileId </th>
                                        <th>@pr.ProfileName </th>
                                        @{
                                            if(pr.IsEnable)
                                            {
                                                <th>Activo</th>
                                            }
                                            else
                                            {
                                                <th>Inactivo</th>
                                            }
                                        } 
                                        <th scope="row">
                                            <button type="button" class="btn btn-outline-primary" data-toggle="modal"
                                                data-target="#Editar-Profiles"
                                                onclick="page.onClickEditProfile('@pr.ProfileId')">
                                                <i class="bi bi-pencil-square"></i>
                                            </button>
                                        </th>
                                        <th scope="row">
                                            <button type="button" class="btn btn-outline-danger" onclick="deleteProfile('@pr.ProfileId','@pr.ProfileName')" >
                                                <i class="bi bi-x-circle"></i>
                                            </button>
                                        </th>
                                    </tr>
                                }
                            }
                        </table>
                    }
                }
            </div>
        </div>
    </div>
</section>

<!-- Modal New-->
  <div class="modal fade" id="New-Profiles" role="dialog">
    <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Nuevo Perfil</h5>
        <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal" aria-label="Close">X</button>
      </div>
       <form method="POST" action="/Config/Profile">
        <div class="modal-body">
            <input type="hidden" id="modal-new-ProfileId"  name="Key" />
                <div class="mb-3">
                    <label for="modal-new-ProfileName" class="form-label">Nombre Perfil</label>
                    <input type="text" class="form-control" id="modal-new-ProfileName" name="ProfileName"  >
                </div>
                <hr/>
                <div class="mb-1">
                    <label class="form-label">Seleccione los permisos del Perfil: </label>
                </div>
                 @{
                    List<Permissions> permissions = ViewBag.LtsPermissons;

                    if (@permissions.Count > 0)
                    {
                        foreach(Permissions perm in permissions)
                        {
                            if(perm.PatternPermissonId != 0)
                            {
                                <div class="form-check" >
                                    <input class="form-check-input" type="checkbox" value="@perm.PermissionsId" id="@perm.PermissionsId" name="PermissonsSelected"/>
                                    <label class="form-check-label" for="@perm.PermissionsId" >
                                        @perm.TittleHeader
                                    </label>
                                </div>    
                            }
                        }
                    }
                 }
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Cerrar</button>
            <button type="submit" class="btn btn-outline-primary" >Guardar</button>
        </div>
      </form>
    </div>
  </div>
  </div>

  <!-- Modal -Editar -->
  <div class="modal fade" id="Editar-Profiles" role="dialog">
    <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Editar Perfil</h5>
        <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal" aria-label="Close">X</button>
      </div>
       <form method="POST" action="/Config/EditProfile">
        <div class="modal-body">
                <input type="hidden" id="modal-ProfileId"  name="Key"  />
                <div class="mb-3">
                    <label for="modal-ProfileName" class="form-label">Nombre Menu</label>
                    <input type="text" class="form-control" id="modal-ProfileName" name="ProfileName"  >
                </div>
                  <hr/>
                <div class="mb-1">
                    <label class="form-label">Seleccione los permisos del Perfil: </label>
                </div>
                <div class="mb-1" id="containerOptionsPerm"></div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Cerrar</button>
            <button type="submit" class="btn btn-outline-primary" >Guardar Cambios</button>
        </div>
      </form>
    </div>
  </div>
  </div>

@section Scripts {
      
<script>
    const prms = [
        @foreach (Profile pr in LtsProfiles)
        {
            @:{ "ProfileId": "@pr.ProfileId",  "ProfileName" : "@pr.ProfileName", "IsEnable":"@pr.IsEnable" },
        }
    ];

    
    const context = () => {
        let prms = [];
        let prmFound = {};
        let permissons = [];
        let optionsPermisson = [];
        let awaitOptions = true;

        const addPrf = (Pr = []) => {
            prms = Pr;
        }
        const addPermss = (per = [] ) => {
            permissons = per;
        } 

        const getPrms = () => prms;

        const findProfile = (id ="") => {
            let newPrms =  prms.filter( pr => pr.ProfileId === id);
            return (newPrms.length > 0) ? newPrms[0] : null;
        }

        const onClickEditProfile = (id = "") => {
            const profileFound = findProfile(id);
            if(profileFound)
            {
                prmFound = profileFound;
                document.getElementById("modal-ProfileId").value = profileFound.ProfileId; 
                document.getElementById("modal-ProfileName").value = profileFound.ProfileName;
                document.getElementById("containerOptionsPerm").innerHTML= render();
                requestOptions(id);
            }
            
        }

        const getPrmFound = () => prmFound;

        const selectedNewPermisson = (event) => 
        {
            console.log(event.target.value);
        }


        const getOptionsPermisson = () => optionsPermisson;
        const setOptionsPermisson = (newOpt = []) => optionsPermisson = newOpt;

        const isAwaitOptions = () => awaitOptions;

        const requestOptions = (idProfile = "" ) => {
            fetch(`/Config/SearchPermissons?idProfile=${idProfile}`)
            .then(response => response.json())
            .then(data => {
                awaitOptions = false;
                optionsPermisson = data;
                document.getElementById("containerOptionsPerm").innerHTML=render();
            } );
        }

        const render = () => {
            if(awaitOptions){
                return `
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">.</span>
                </div>
                `;
            }else{
                return buildOptions();
            }
        }

        const buildOptions = () => {
            let  html = "";
            optionsPermisson.forEach( op => {
                html = html + `
                    <div class="form-check" >
                        <input class="form-check-input" type="checkbox" value="${op.value}" id="${op.value}" name="PermissonsSelected" ${op.isSelected? 'checked' : null} />
                        <label class="form-check-label" for="${op.value}" >
                            ${op.label}
                        </label>
                    </div>    
                `;
            });
            return html;
        } 

        return {
            addPrf,
            getPrms,
            onClickEditProfile,
            selectedNewPermisson,
            addPermss,
            getOptionsPermisson,
            setOptionsPermisson,
            isAwaitOptions,
            requestOptions,
            render
        };
    }

    const page = context();
    page.addPrf(prms);

    const deleteProfile = (idProfile ="", nameProfile = "") => {
        Swal.fire({
            title: `¿Está seguro de borrar el perfil: ${nameProfile}?`,
            text: "Los usuarios asignados al perfil quedaran con el perfil de Invitado (sin permisos).",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Borrar',
            cancelButtonText: 'Cancelar'
            }).then((result) => {
            if (result.isConfirmed) {
                console.log("borrar " + idProfile);
            }
            })
    }
    
</script>
}